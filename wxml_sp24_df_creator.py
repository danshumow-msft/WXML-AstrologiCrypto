# -*- coding: utf-8 -*-
"""WXML SP24 DF Creator

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yA40pl9UintvCKTUeHTk_m240yn31Lbn
"""

!pip install kerykeion

#IMPORTS
from kerykeion import AstrologicalSubject
from datetime import timedelta, date, datetime
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import random
import time

#CUSTOM DICTIONARIES/FUNCTIONS
translate = {
  "First_House": 1,
  "Second_House": 2,
  "Third_House": 3,
  "Fourth_House": 4,
  "Fifth_House": 5,
  "Sixth_House": 6,
  "Seventh_House": 7,
  "Eighth_House": 8,
  "Ninth_House": 9,
  "Tenth_House": 10,
  "Eleventh_House": 11,
  "Twelfth_House": 12
}

# The functions str_time_prop() and random_date() are taken from
# https://stackoverflow.com/questions/553303/generate-a-random-date-between-two-other-dates
# https://stackoverflow.com/questions/72242731/how-to-convert-datetime-format-a-d-b-y-hms-z-in-python
# https://www.ibm.com/docs/en/workload-automation/10.2.0?topic=troubleshooting-date-time-format-reference-strftime
def str_time_prop(start, end, time_format, prop):
    stime = time.mktime(time.strptime(start, time_format))
    etime = time.mktime(time.strptime(end, time_format))

    ptime = stime + prop * (etime - stime)

    return time.strftime(time_format, time.localtime(ptime))


def random_date(start, end, prop):
    return str_time_prop(start, end, '%d/%m/%Y %H:%M', prop) #'%d/%m/%Y %H:%M'

print(random_date("1/1/1900 7:00", "1/1/2000 7:00", random.random()))

column_names = ['DateTime','Sun','Moon','Mercury','Venus','Mars','Jupiter','Saturn', 'Uranus', 'Neptune', 'Trait1', 'Trait2', 'Trait3']
df = pd.DataFrame(columns=column_names)

for i in range(10000):
  date = random_date("1/1/1900 7:00", "1/2/2000 7:00", random.random())
  day = int(date[0:2])
  month = int(date[3:5])
  year = int(date[6:10])
  hour = int(date[11:13])
  minute = int(date[14:16])

  subject= AstrologicalSubject("Subject", year, month, day, hour, minute, lng=80, lat=13, city="Chennai", nation = "IN")
  newEntry={'DateTime': date,
            'Sun':translate[subject.sun.house],
            'Moon':translate[subject.moon.house],
            'Mercury':translate[subject.mercury.house],
            'Venus':translate[subject.venus.house],
            'Mars':translate[subject.mars.house],
            'Jupiter':translate[subject.jupiter.house],
            'Saturn':translate[subject.saturn.house],
            'Uranus':translate[subject.uranus.house],
            'Neptune':translate[subject.neptune.house],
            'Trait1': random.random(),
            'Trait2': random.uniform(0, 5),
            'Trait3': random.randint(0, 10)}
  df = pd.concat([df, pd.DataFrame([newEntry])], ignore_index=True)

df=df[['DateTime','Sun','Moon','Mercury','Venus','Mars','Jupiter','Saturn', 'Uranus', 'Neptune', 'Trait1', 'Trait2', 'Trait3']]
df.to_csv('WXML_SP24_DF.csv', index=False)